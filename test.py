import torchimport torchvisionfrom model_dc import Generator_DC, Discriminator_DCprint("---------------GENERATOR TEST-----------------")device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')batch_size = 32epoch = 100if device == 'cpu':    param = torch.load('./model_save/G.pth', map_location=lambda storage, loc: storage)else:    param = torch.load('./model_save/G.pth')G = Generator_DC()G.load_state_dict(param)test_z = torch.randn(batch_size, 100, requires_grad=False, device=device).view(-1, 100, 1, 1)# test_z = torch.rand(batch_size, 1, requires_grad=False, device=device)test_img = G(test_z)test_img = test_img.view(-1, 1, 28, 28)grid = torchvision.utils.make_grid(test_img)torchvision.utils.save_image(grid, './gen_img/{}_gan.png'.format(epoch))# plt.imshow(test_img[k].data)# plt.gray()# plt.savefig('./gen_img/{}_{}_gan.png'.format(epoch, k))