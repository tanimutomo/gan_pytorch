# Wasserstein_distanceimport torch# cuda ---------------------------------------------------------device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')# loss ---------------------------------------------------------def loss_wG(output_f):    loss = - output_f.mean()    return lossdef loss_wD(output_r, output_f):    real_loss = output_r.mean()    fake_loss = output_f.mean()    loss = -(real_loss - fake_loss)    return loss